{"ast":null,"code":"// slack.js\n\nconst BASE_URL = \"http://localhost:8000\"; // Make sure your backend is running on this\n\n// Step 1: Redirect to Slack authorization\nexport async function authorize(userId, orgId) {\n  const formData = new FormData();\n  formData.append(\"user_id\", userId);\n  formData.append(\"org_id\", orgId);\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/authorize`, {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Authorization failed: ${response.statusText}`);\n    }\n    const url = await response.text();\n    window.location.href = url;\n  } catch (error) {\n    console.error(\"Slack authorization error:\", error);\n    alert(\"Slack authorization failed.\");\n  }\n}\n\n// Step 2: Handle OAuth2 callback from Slack\nexport async function oauth2callback(queryParams) {\n  try {\n    const url = new URL(`${BASE_URL}/integrations/slack/oauth2callback`);\n    queryParams.forEach((value, key) => url.searchParams.append(key, value));\n    const response = await fetch(url.toString());\n    if (!response.ok) {\n      throw new Error(`OAuth2 callback failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack OAuth callback error:\", error);\n    alert(\"Slack OAuth2 callback failed.\");\n    return null;\n  }\n}\n\n// Step 3: Get stored Slack credentials\nexport async function getCredentials(userId, orgId) {\n  const formData = new FormData();\n  formData.append(\"user_id\", userId);\n  formData.append(\"org_id\", orgId);\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/credentials`, {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Get credentials failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack getCredentials error:\", error);\n    alert(\"Failed to get Slack credentials.\");\n    return null;\n  }\n}\n\n// Step 4: Load Slack items (like channels, users, messages)\nexport async function loadItems(credentials) {\n  const formData = new FormData();\n  formData.append(\"credentials\", JSON.stringify(credentials));\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/load`, {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Load items failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack loadItems error:\", error);\n    alert(\"Failed to load Slack data.\");\n    return [];\n  }\n}","map":{"version":3,"names":["BASE_URL","authorize","userId","orgId","formData","FormData","append","response","fetch","method","body","ok","Error","statusText","url","text","window","location","href","error","console","alert","oauth2callback","queryParams","URL","forEach","value","key","searchParams","toString","json","getCredentials","loadItems","credentials","JSON","stringify"],"sources":["C:/Users/Rama Tulasi/Downloads/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/slack.js"],"sourcesContent":["// slack.js\n\nconst BASE_URL = \"http://localhost:8000\"; // Make sure your backend is running on this\n\n// Step 1: Redirect to Slack authorization\nexport async function authorize(userId, orgId) {\n  const formData = new FormData();\n  formData.append(\"user_id\", userId);\n  formData.append(\"org_id\", orgId);\n\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/authorize`, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Authorization failed: ${response.statusText}`);\n    }\n\n    const url = await response.text();\n    window.location.href = url;\n  } catch (error) {\n    console.error(\"Slack authorization error:\", error);\n    alert(\"Slack authorization failed.\");\n  }\n}\n\n// Step 2: Handle OAuth2 callback from Slack\nexport async function oauth2callback(queryParams) {\n  try {\n    const url = new URL(`${BASE_URL}/integrations/slack/oauth2callback`);\n    queryParams.forEach((value, key) => url.searchParams.append(key, value));\n\n    const response = await fetch(url.toString());\n\n    if (!response.ok) {\n      throw new Error(`OAuth2 callback failed: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack OAuth callback error:\", error);\n    alert(\"Slack OAuth2 callback failed.\");\n    return null;\n  }\n}\n\n// Step 3: Get stored Slack credentials\nexport async function getCredentials(userId, orgId) {\n  const formData = new FormData();\n  formData.append(\"user_id\", userId);\n  formData.append(\"org_id\", orgId);\n\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/credentials`, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Get credentials failed: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack getCredentials error:\", error);\n    alert(\"Failed to get Slack credentials.\");\n    return null;\n  }\n}\n\n// Step 4: Load Slack items (like channels, users, messages)\nexport async function loadItems(credentials) {\n  const formData = new FormData();\n  formData.append(\"credentials\", JSON.stringify(credentials));\n\n  try {\n    const response = await fetch(`${BASE_URL}/integrations/slack/load`, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Load items failed: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Slack loadItems error:\", error);\n    alert(\"Failed to load Slack data.\");\n    return [];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}